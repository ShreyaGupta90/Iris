# -*- coding: utf-8 -*-
"""Decision Tree Classifier- Postprunning

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SVuhLgn6F7ERmbg0HXs3FBsvl2KSE3_h
"""

# Commented out IPython magic to ensure Python compatibility.
import seaborn as sns
import pandas as pd
import numpy as np
# %matplotlib inline
df= sns.load_dataset('iris')
df.head()

from sklearn.datasets import load_iris
iris=load_iris()
iris.data

df['species'].unique()  # multi class classification

df.isnull().sum()

df.head()

X=df.iloc[:,:-1]
y=iris.target
X,y

#train test split
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.33, random_state=42)
X_train

from sklearn.tree import DecisionTreeClassifier
#Postprunning
treemodel = DecisionTreeClassifier()

treemodel.fit(X_train,y_train)

from sklearn import tree
import matplotlib.pyplot as plt
plt.figure(figsize=(15,10))
tree.plot_tree(treemodel,filled=True)

treemodel = DecisionTreeClassifier(max_depth=2)
treemodel.fit(X_train,y_train)
plt.figure(figsize=(15,10))
tree.plot_tree(treemodel,filled=True)

print(treemodel.score(X_train,y_train))
print(treemodel.score(X_test,y_test))

## prediction
y_pred=treemodel.predict(X_test)
y_pred

### score
from sklearn.metrics import accuracy_score, classification_report
score=accuracy_score(y_test,y_pred)
print(score)

print(classification_report(y_test,y_pred))

sns.pairplot(df,hue='species')

